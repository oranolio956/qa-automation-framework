# SMS Worker Dockerfile
# Optimized for background queue processing

FROM python:3.11-slim-bullseye as base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    build-essential \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create app directory and user
RUN groupadd -r sms && useradd -r -g sms sms
RUN mkdir -p /app /var/log/sms && chown -R sms:sms /app /var/log/sms

WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir celery[redis]

# Copy application code
COPY worker.py .
COPY main.py .
RUN chown -R sms:sms /app

# Switch to non-root user
USER sms

# Health check for worker (checks if processes are running)
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD pgrep -f "python.*worker.py" || exit 1

# Run the worker
CMD ["python", "worker.py"]