[tool:pytest]
# Pytest configuration for comprehensive testing

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests that run quickly without external dependencies
    integration: Integration tests that require external services  
    performance: Performance and benchmark tests
    load: Load testing scenarios
    monitoring: Monitoring and alerting tests
    anti_detection: Anti-detection technique validation tests
    slow: Tests that take longer than 30 seconds
    requires_emulator: Tests that require Android emulator
    requires_real_services: Tests that require real third-party services  
    chaos: Chaos engineering and failure injection tests
    benchmark: Benchmark tests for performance regression tracking

# Output configuration
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --maxfail=10
    --durations=10
    --color=yes

# Warnings configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::pytest.PytestUnraisableExceptionWarning

# Timeout configuration
timeout = 300
timeout_method = thread

# Coverage configuration (if pytest-cov is installed)
addopts = --cov=automation --cov-report=term-missing --cov-report=html --cov-fail-under=70

# Asyncio configuration
asyncio_mode = auto

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# File logging
log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test collection configuration
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# Minimum version requirements
minversion = 6.0

# Custom test session configuration
console_output_style = progress